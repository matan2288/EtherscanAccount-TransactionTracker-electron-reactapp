{"version":3,"sources":["App.js","index.js"],"names":["App","useState","apiData","setApiData","txnHash","setTxnHash","defaultMinTransactions","setMinTransactions","defaultMaxTransactions","setMaxTransactions","loading","setLoading","searchAccountInputRef","useRef","toMaxTransactions","getDataFromApi","a","fetch","then","response","json","dataAquiredFromApi","result","catch","err","console","log","useEffect","className","id","src","alt","href","target","type","defaultValue","ref","onClick","current","value","e","preventDefault","Table","striped","bordered","hover","size","responsive","slice","map","field","i","from","to","timeStamp","confirmations","animation","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wUAyLeA,MAlLf,WACE,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA8BF,mBAC5B,4CADF,mBAAOG,EAAP,KAAgBC,EAAhB,KAGA,EAAqDJ,mBAAS,GAA9D,mBAAOK,EAAP,KAA+BC,EAA/B,KACA,EAAqDN,mBAAS,KAA9D,mBAAOO,EAAP,KAA+BC,EAA/B,KACA,EAA8BR,oBAAS,GAAvC,mBAAOS,EAAP,KAAgBC,EAAhB,KAOMC,EAAwBC,mBACxBC,EAAoBD,mBAmBpBE,EAAc,uCAAG,sBAAAC,EAAA,sEACfC,MAAK,4EAGP,KAAOb,EAHA,+FAMRc,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAELlB,EAAWkB,EAAmBC,QAC9BX,GAAW,MAGZY,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,MAdT,2CAAH,qDAqBpB,OAJAG,qBAAU,WACRZ,MACC,CAACX,EAASC,IAGX,sBAAKuB,UAAU,MAAf,UACE,sBAAKA,UAAU,cAAf,UACE,qBACEC,GAAG,UACHC,IAAI,yHACJC,IAAI,QAEN,sBAAKH,UAAU,qBAAf,UACE,qBACEC,GAAG,cACHC,IAAI,uFACJC,IAAI,QAEN,yEAEA,oBAAGH,UAAU,eAAb,+IAIG,oBAAGA,UAAU,SAAb,eAAwB,+EAG3B,mBAAGA,UAAU,cAAb,yFAIA,8BACG,IACD,mBAAGI,KAAK,2BAA2BC,OAAO,SAA1C,iDAEK,OAGP,sCAEA,uBACEC,KAAK,OACLL,GAAG,YACHM,aAAa,GACbC,IAAKxB,IAGP,wBAAQgB,UAAU,QAAQS,QAjFX,WACrBhC,EAAWO,EAAsB0B,QAAQC,OACzC5B,GAAW,IA+EL,kDAKF,qBAAKiB,UAAU,qBAAf,SACE,gCACE,mBAAGI,KAAK,IAAIK,QAnFG,SAACG,GACxBA,EAAEC,iBACFlC,EAAmBD,EAAyB,KAC5CG,EAAmBD,EAAyB,MAgFpC,4CADF,IAKE,mBAAGwB,KAAK,GAAGK,QApGA,WACnB9B,EAAmB,GACnBE,EAAmB,MAkGX,2BAGA,2EACA,+BACE,uBAAOyB,KAAK,SAASE,IAAKtB,MAE5B,wBAAQc,UAAU,QAAQS,QAxFD,SAACG,GAClCA,EAAEC,iBAEFhC,EAAmBK,EAAkBwB,QAAQC,QAqFrC,wBAIN,eAACG,EAAA,EAAD,CAAOd,UAAU,QAAQe,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,KAAK,KAAKC,WAAW,KAArE,UACE,gCACE,+BACE,gDACA,sCACA,oCACA,4CACA,2CACA,oDAGJ,gCACGrC,EACCR,EACG8C,MAAM1C,EAAwBE,GAC9ByC,KAAI,SAACC,EAAOC,GACX,OACE,+BACE,6BAAK7C,EAAyB6C,IAC9B,6BAAKD,EAAME,OACX,6BAAKF,EAAMG,KACX,oBAAIxB,GAAG,QAAP,SAAgBqB,EAAMX,QACtB,6BAAKW,EAAMI,YACX,6BAAKJ,EAAMK,kBANJJ,MAWf,+BACE,6BACE,cAAC,IAAD,CAAwBK,UAAU,aAEpC,6BACE,cAAC,IAAD,CAAwBA,UAAU,aAEpC,6BACE,cAAC,IAAD,CAAwBA,UAAU,aAEpC,6BACE,cAAC,IAAD,CAAwBA,UAAU,aAEpC,6BACE,cAAC,IAAD,CAAwBA,UAAU,aAEpC,6BACE,cAAC,IAAD,CAAwBA,UAAU,aAEpC,6BACE,cAAC,IAAD,CAAwBA,UAAU,yBCzKlDC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.518176c8.chunk.js","sourcesContent":["import { React, useEffect, useState, useRef } from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\nimport Table from \"react-bootstrap/Table\";\nimport * as ReactBootStrap from \"react-bootstrap\";\n\nfunction App() {\n  const [apiData, setApiData] = useState([]);\n  const [txnHash, setTxnHash] = useState(\n    \"ee41fe01a8f7eef0a90c5b181472ef3a9412e7b9\"\n  );\n  const [defaultMinTransactions, setMinTransactions] = useState(0);\n  const [defaultMaxTransactions, setMaxTransactions] = useState(100);\n  const [loading, setLoading] = useState(false);\n\n  const refreshTable = () => {\n    setMinTransactions(0);\n    setMaxTransactions(100);\n  };\n\n  const searchAccountInputRef = useRef();\n  const toMaxTransactions = useRef();\n\n  const evokeSearchBtn = () => {\n    setTxnHash(searchAccountInputRef.current.value);\n    setLoading(false);\n  };\n\n  const nextTransactions = (e) => {\n    e.preventDefault();\n    setMinTransactions(defaultMinTransactions + 100);\n    setMaxTransactions(defaultMaxTransactions + 100);\n  };\n\n  const evokeAddingTransactionsBtn = (e) => {\n    e.preventDefault();\n    // console.log(toMaxTransactions.current.value);\n    setMaxTransactions(toMaxTransactions.current.value);\n  };\n\n  const getDataFromApi = async () => {\n    await fetch(\n      //Offset: Query the number of records, optional. The default is to query 10000 records.\n      `https://api.etherscan.io/api?module=account&action=txlist&address=${\n        \"0x\" + txnHash\n      }&endblock=99999999&page=page&offset=10&sort=ascd&apikey=154BUMQ1Y6WSQRGWFRQY3R6GTKR4P8HS6P`\n    )\n      .then((response) => response.json())\n      .then((dataAquiredFromApi) => {\n        // console.log(dataAquiredFromApi);\n        setApiData(dataAquiredFromApi.result);\n        setLoading(true);\n      })\n\n      .catch((err) => console.log(err));\n  };\n\n  useEffect(() => {\n    getDataFromApi();\n  }, [txnHash, setTxnHash]);\n\n  return (\n    <div className=\"App\">\n      <div className=\"top-content\">\n        <img\n          id=\"eth-img\"\n          src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/6/6f/Ethereum-icon-purple.svg/1200px-Ethereum-icon-purple.svg.png\"\n          alt=\"eth\"\n        />\n        <div className=\"top-content-child1\">\n          <img\n            id=\"anlysis-img\"\n            src=\"https://www.seekpng.com/png/full/335-3350546_financial-growth-analysis-icon-icon.png\"\n            alt=\"eth\"\n          />\n          <h1>Etherscan's Account Transaction Tracker</h1>\n\n          <p className=\"instructions\">\n            Instructions:Copy and paste the BOLD Account id after the 0x to the\n            search bar and wait for the transactions to load, For example:\n\n             <p className='acc-id'>0x<b>ee41fe01a8f7eef0a90c5b181472ef3a9412e7b9</b></p> \n          \n          </p>\n          <p className=\"please-note\">\n            Please NOTE!: If the User's ID is invalid, The table wont display\n            anything.\n          </p>\n          <p>\n            {\" \"}\n            <a href=\"https://etherscan.io/txs\" target=\"_blank\">\n              Fetch Account's Id's From This Link\n            </a>{\" \"}\n          </p>\n\n          <span>0x</span>\n\n          <input\n            type=\"text\"\n            id=\"searchbar\"\n            defaultValue=\"\"\n            ref={searchAccountInputRef}\n          />\n\n          <button className='btn-1' onClick={evokeSearchBtn}>\n            Search Transactions By Account ID\n          </button>\n        </div>\n\n        <div className=\"top-content-child2\">\n          <div>\n            <a href=\"#\" onClick={nextTransactions}>\n              Show the next 100 Transactions\n            </a>\n            /\n            <a href=\"\" onClick={refreshTable}>\n              Refresh Table\n            </a>\n            <div>Pick Max Transactions To Display On Page</div>\n            <span>\n              <input type=\"number\" ref={toMaxTransactions} />\n            </span>\n            <button className='btn-2' onClick={evokeAddingTransactionsBtn}>Go</button>\n          </div>\n        </div>\n      </div>\n      <Table className=\"table\" striped bordered hover size=\"sm\" responsive=\"sm\">\n        <thead>\n          <tr>\n            <th>Ascended Order</th>\n            <th>From</th>\n            <th>To</th>\n            <th>Value(ETH)</th>\n            <th>Timestamp</th>\n            <th>Confirmations</th>\n          </tr>\n        </thead>\n        <tbody>\n          {loading ? (\n            apiData\n              .slice(defaultMinTransactions, defaultMaxTransactions)\n              .map((field, i) => {\n                return (\n                  <tr key={i}>\n                    <td>{defaultMinTransactions + i}</td>\n                    <td>{field.from}</td>\n                    <td>{field.to}</td>\n                    <td id=\"value\">{field.value}</td>\n                    <td>{field.timeStamp}</td>\n                    <td>{field.confirmations}</td>\n                  </tr>\n                );\n              })\n          ) : (\n            <tr>\n              <td>\n                <ReactBootStrap.Spinner animation=\"border\" />\n              </td>\n              <td>\n                <ReactBootStrap.Spinner animation=\"border\" />\n              </td>\n              <td>\n                <ReactBootStrap.Spinner animation=\"border\" />\n              </td>\n              <td>\n                <ReactBootStrap.Spinner animation=\"border\" />\n              </td>\n              <td>\n                <ReactBootStrap.Spinner animation=\"border\" />\n              </td>\n              <td>\n                <ReactBootStrap.Spinner animation=\"border\" />\n              </td>\n              <td>\n                <ReactBootStrap.Spinner animation=\"border\" />\n              </td>\n            </tr>\n          )}\n        </tbody>\n      </Table>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}